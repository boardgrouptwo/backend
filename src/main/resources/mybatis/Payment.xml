<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.khcare.spring">
    <!--  후원 내역 추가  -->
    <insert id="paymentInsert" parameterType="map">
        INSERT INTO payment (user_id, pay_amount, pay_date, pay_content)
        VALUES ( #{user_id}, #{pay_amount}, now(), #{pay_content} )
    </insert>

    <!--  결제 내역 출력  -->
    <select id="paymentList" parameterType="java.util.HashMap" resultType="map">
        SELECT user_id, pay_date, pay_amount, pay_content, pay_type
            , ( select COUNT(*) FROM (
                select user_id, pay_date, pay_amount, pay_content FROM payment WHERE user_id = #{user_id}
                UNION ALL
                SELECT user_id, spon_date AS 'pay_date', spon_money AS 'pay_amount', spon_content AS 'pay_content' FROM sponsor WHERE user_id = #{user_id}
                ) AS fu
            ) AS total_count
        FROM
        (
            select user_id, pay_date, pay_amount, pay_content, '결제' AS pay_type FROM payment WHERE user_id = #{user_id}
            UNION ALL
            SELECT user_id, spon_date AS 'pay_date', spon_money AS 'pay_amount', spon_content AS 'pay_content', '후원' AS pay_type FROM sponsor WHERE user_id = #{user_id}
        ) AS fu
        ORDER BY pay_date desc
        <if test="limit_cnt != null">
            LIMIT 5
        </if>
    </select>

    <!--  5건 결제 내역 출력  -->
    <select id="paymentListPreview" parameterType="java.util.HashMap" resultType="map">
        select user_id, pay_date, pay_amount, pay_content, '결제' AS pay_type FROM payment
            WHERE user_id = #{user_id}
        UNION ALL
        SELECT user_id, spon_date AS 'pay_date', spon_money AS 'pay_amount', spon_content AS 'pay_content', '후원' AS pay_type FROM sponsor
            WHERE user_id = #{user_id}
        ORDER BY pay_date desc
        LIMIT 5
    </select>

    <!--  일반 결제 건  -->
    <select id="paymentListP" parameterType="java.util.HashMap" resultType="map">
        select user_id, pay_date, pay_amount, pay_content, '결제' AS pay_type
            , (SELECT COUNT(*) FROM payment WHERE user_id = #{user_id}) AS total_count
        FROM payment
        WHERE user_id = #{user_id}
        ORDER BY pay_date desc
        <if test="page != null">
            LIMIT 10 OFFSET #{page}
        </if>
    </select>

    <!--  후원 결제 건  -->
    <select id="paymentListS" parameterType="java.util.HashMap" resultType="map">
        SELECT user_id, spon_date AS 'pay_date', spon_money AS 'pay_amount', spon_content AS 'pay_content', '후원' AS pay_type
            , (SELECT COUNT(*) FROM sponsor WHERE user_id = #{user_id}) AS total_count
        FROM sponsor
        WHERE user_id = #{user_id}
        ORDER BY pay_date desc
        <if test="page != null">
            LIMIT 10 OFFSET #{page}
        </if>
    </select>

    <!-- 후원 내역 삭제 -->
    <delete id="paymentDelete" parameterType="int">
        DELETE FROM payment WHERE pay_no = #{pay_no}
    </delete>

    <!-- pay_no값 확인 -->
    <select id="paymentNo" resultType="map">
        SELECT pay_no FROM payment
        ORDER BY pay_no DESC LIMIT 1;
    </select>
</mapper>